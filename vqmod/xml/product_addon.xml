<modification>
	<id>Add ons and related videos</id>
	<version>2.1</version>
	<vqmver>2.0</vqmver>
	<author>lorath</author>
	<file name="admin/language/english/catalog/product.php">
		<operation info="Add a new fields to form">
			<search position="after"><![CDATA[
				                $_['entry_store']            = 'Stores:';
				                ]]>
				            </search>
			<add><![CDATA[
				$_['entry_add_on']   		= 'Product Type';
				$_['entry_product_addon']   = 'Products';
				$_['entry_video']           = 'Related Video:';
				$_['entry_product_features']= 'Features';
				]]>
			</add>
		</operation>
	</file>

			<file name="admin/controller/catalog/product.php">
				<operation info="get values to form">
					<search position="after"><![CDATA[
						            		$this->data['entry_keyword'] = $this->language->get('entry_keyword');
						                ]]>
						            </search>
					<add><![CDATA[
						$this->data['entry_add_on'] = $this->language->get('entry_add_on');
						$this->data['entry_product_addon'] = $this->language->get('entry_product_addon');
						$this->data['entry_video'] = $this->language->get('entry_video');
						$this->data['entry_product_features'] = $this->language->get('entry_product_features');]]>
					</add>
				</operation>
				<operation info="Product display code">
					<search position="before"><![CDATA[		if (isset($this->request->post['product_option'])) {]]>
					</search>
					<add>
						<![CDATA[
									//product display
			$this->load->model('catalog/option');
			$this->data['features'] = array();
			if (isset($this->request->get['product_id'])) {
				$feature_prdctid=$this->request->get['product_id'];
				$features=$this->model_catalog_product->getFeatureImages($feature_prdctid);
				foreach ($features as $feature) {
				$this->data['features'][] = array(
				'feature_id' =>$feature['feature_id'],
          			'name'      => $feature['name'],
          			'image'    => $feature['image'],
          			'product_id'	=>$feature['product_id']

					);
					}
				}else{
					$feature_prdctid=0;
					$features=$this->model_catalog_product->getFeatureImages($feature_prdctid);
						foreach ($features as $feature) {
							$this->data['features'][] = array(
							'feature_id' =>$feature['feature_id'],
							'name'      => $feature['name'],
							'image'    => $feature['image']
								);
								}
					}
				
				
				$results = $this->model_catalog_product->getParentproducts(0);
						    	
				foreach ($results as $result) {
					$action = array();
					
					$action[] = array(
						'text' => $this->language->get('text_edit'),
						'href' => $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $result['product_id'] . $url, 'SSL')
					);
					
					if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
						$image = $this->model_tool_image->resize($result['image'], 40, 40);
					} else {
						$image = $this->model_tool_image->resize('no_image.jpg', 40, 40);
					}
			
					$special = false;
					
					$product_specials = $this->model_catalog_product->getProductSpecials($result['product_id']);
					
					foreach ($product_specials  as $product_special) {
						if (($product_special['date_start'] == '0000-00-00' || $product_special['date_start'] < date('Y-m-d')) && ($product_special['date_end'] == '0000-00-00' || $product_special['date_end'] > date('Y-m-d'))) {
							$special = $product_special['price'];
					
							break;
						}					
					}
			
		      		$this->data['products'][] = array(
						'product_id' => $result['product_id'],
						'name'       => $result['name'],
						'model'      => $result['model'],
						'price'      => $result['price'],
						'special'    => $special,
						'image'      => $image,
						'quantity'   => $result['quantity'],
						'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
						'selected'   => isset($this->request->post['selected']) && in_array($result['product_id'], $this->request->post['selected']),
						'action'     => $action
					);
				}
				
						]]>
					</add>
				</operation>
				<operation info="Replace insert function">
			 		<search position="replace" offset="50">
			 			<![CDATA[  	public function insert() {]]>
				    </search>
					<add>
						<![CDATA[
							public function insert() {	
					
			    	$this->language->load('catalog/product');

			    	$this->document->setTitle($this->language->get('heading_title')); 
					
					$this->load->model('catalog/product');

			    	if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validateForm()) {
						$this->model_catalog_product->addProduct($this->request->post);

				  		
						$this->session->data['success'] = $this->language->get('text_success');
				  
						$url = '';
						
						if (isset($this->request->get['filter_name'])) {
							$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
						}
					
						if (isset($this->request->get['filter_model'])) {
							$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
						}
						
						if (isset($this->request->get['filter_price'])) {
							$url .= '&filter_price=' . $this->request->get['filter_price'];
						}
						
						if (isset($this->request->get['filter_quantity'])) {
							$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
						}
						
						if (isset($this->request->get['filter_status'])) {
							$url .= '&filter_status=' . $this->request->get['filter_status'];
						}
								
						if (isset($this->request->get['sort'])) {
							$url .= '&sort=' . $this->request->get['sort'];
						}

						if (isset($this->request->get['order'])) {
							$url .= '&order=' . $this->request->get['order'];
						}

						if (isset($this->request->get['page'])) {
							$url .= '&page=' . $this->request->get['page'];
						}
						
						$this->redirect($this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL'));
			    	}
					$this->getProductlist();
				
			    	$this->getForm();
			  	}
							]]>
			        </add>
		</operation>
		<operation info="add new function">
			<search position="before"><![CDATA[  	protected function getForm() {]]>
			</search>
			<add><![CDATA[
					protected function getProductlist() {				
		if (isset($this->request->get['filter_name'])) {
			$filter_name = $this->request->get['filter_name'];
		} else {
			$filter_name = null;
		}

		if (isset($this->request->get['filter_model'])) {
			$filter_model = $this->request->get['filter_model'];
		} else {
			$filter_model = null;
		}
		
		if (isset($this->request->get['filter_price'])) {
			$filter_price = $this->request->get['filter_price'];
		} else {
			$filter_price = null;
		}

		if (isset($this->request->get['filter_quantity'])) {
			$filter_quantity = $this->request->get['filter_quantity'];
		} else {
			$filter_quantity = null;
		}

		if (isset($this->request->get['filter_status'])) {
			$filter_status = $this->request->get['filter_status'];
		} else {
			$filter_status = null;
		}

		if (isset($this->request->get['sort'])) {
			$sort = $this->request->get['sort'];
		} else {
			$sort = 'pd.name';
		}
		
		if (isset($this->request->get['order'])) {
			$order = $this->request->get['order'];
		} else {
			$order = 'ASC';
		}
		
		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}
						
		$url = '';
						
		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_model'])) {
			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_price'])) {
			$url .= '&filter_price=' . $this->request->get['filter_price'];
		}
		
		if (isset($this->request->get['filter_quantity'])) {
			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
		}		

		if (isset($this->request->get['filter_status'])) {
			$url .= '&filter_status=' . $this->request->get['filter_status'];
		}
						
		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}

		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}
		
		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}

  		$this->data['breadcrumbs'] = array();

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('text_home'),
			'href'      => $this->url->link('common/home', 'token=' . $this->session->data['token'], 'SSL'),
      		'separator' => false
   		);

   		$this->data['breadcrumbs'][] = array(
       		'text'      => $this->language->get('heading_title'),
			'href'      => $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url, 'SSL'),       		
      		'separator' => ' :: '
   		);
		
		$this->data['insert'] = $this->url->link('catalog/product/insert', 'token=' . $this->session->data['token'] . $url, 'SSL');
		$this->data['copy'] = $this->url->link('catalog/product/copy', 'token=' . $this->session->data['token'] . $url, 'SSL');	
		$this->data['delete'] = $this->url->link('catalog/product/delete', 'token=' . $this->session->data['token'] . $url, 'SSL');
    	
		$this->data['products'] = array();

		$data = array(
			'filter_name'	  => $filter_name, 
			'filter_model'	  => $filter_model,
			'filter_price'	  => $filter_price,
			'filter_quantity' => $filter_quantity,
			'filter_status'   => $filter_status,
			'sort'            => $sort,
			'order'           => $order,
			'start'           => ($page - 1) * $this->config->get('config_admin_limit'),
			'limit'           => $this->config->get('config_admin_limit')
		);
		
		$this->load->model('tool/image');
		
		$product_total = $this->model_catalog_product->getTotalProducts($data);
			
		$results = $this->model_catalog_product->getParentproducts($data);
				    	
		foreach ($results as $result) {
			$action = array();
			
			$action[] = array(
				'text' => $this->language->get('text_edit'),
				'href' => $this->url->link('catalog/product/update', 'token=' . $this->session->data['token'] . '&product_id=' . $result['product_id'] . $url, 'SSL')
			);
			
			if ($result['image'] && file_exists(DIR_IMAGE . $result['image'])) {
				$image = $this->model_tool_image->resize($result['image'], 40, 40);
			} else {
				$image = $this->model_tool_image->resize('no_image.jpg', 40, 40);
			}
	
			$special = false;
			
			$product_specials = $this->model_catalog_product->getProductSpecials($result['product_id']);
			
			foreach ($product_specials  as $product_special) {
				if (($product_special['date_start'] == '0000-00-00' || $product_special['date_start'] < date('Y-m-d')) && ($product_special['date_end'] == '0000-00-00' || $product_special['date_end'] > date('Y-m-d'))) {
					$special = $product_special['price'];
			
					break;
				}					
			}
	
      		$this->data['products'][] = array(
				'product_id' => $result['product_id'],
				'name'       => $result['name'],
				'model'      => $result['model'],
				'price'      => $result['price'],
				'special'    => $special,
				'image'      => $image,
				'quantity'   => $result['quantity'],
				'status'     => ($result['status'] ? $this->language->get('text_enabled') : $this->language->get('text_disabled')),
				'selected'   => isset($this->request->post['selected']) && in_array($result['product_id'], $this->request->post['selected']),
				'action'     => $action
			);
    	}
		
		$this->data['heading_title'] = $this->language->get('heading_title');		
				
		$this->data['text_enabled'] = $this->language->get('text_enabled');		
		$this->data['text_disabled'] = $this->language->get('text_disabled');		
		$this->data['text_no_results'] = $this->language->get('text_no_results');		
		$this->data['text_image_manager'] = $this->language->get('text_image_manager');		
			
		$this->data['column_image'] = $this->language->get('column_image');		
		$this->data['column_name'] = $this->language->get('column_name');		
		$this->data['column_model'] = $this->language->get('column_model');		
		$this->data['column_price'] = $this->language->get('column_price');		
		$this->data['column_quantity'] = $this->language->get('column_quantity');		
		$this->data['column_status'] = $this->language->get('column_status');		
		$this->data['column_action'] = $this->language->get('column_action');		
				
		$this->data['button_copy'] = $this->language->get('button_copy');		
		$this->data['button_insert'] = $this->language->get('button_insert');		
		$this->data['button_delete'] = $this->language->get('button_delete');		
		$this->data['button_filter'] = $this->language->get('button_filter');
		 
 		$this->data['token'] = $this->session->data['token'];
		
 		if (isset($this->error['warning'])) {
			$this->data['error_warning'] = $this->error['warning'];
		} else {
			$this->data['error_warning'] = '';
		}

		if (isset($this->session->data['success'])) {
			$this->data['success'] = $this->session->data['success'];
		
			unset($this->session->data['success']);
		} else {
			$this->data['success'] = '';
		}

		$url = '';

		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_model'])) {
			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_price'])) {
			$url .= '&filter_price=' . $this->request->get['filter_price'];
		}
		
		if (isset($this->request->get['filter_quantity'])) {
			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
		}
		
		if (isset($this->request->get['filter_status'])) {
			$url .= '&filter_status=' . $this->request->get['filter_status'];
		}
								
		if ($order == 'ASC') {
			$url .= '&order=DESC';
		} else {
			$url .= '&order=ASC';
		}

		if (isset($this->request->get['page'])) {
			$url .= '&page=' . $this->request->get['page'];
		}
					
		$this->data['sort_name'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=pd.name' . $url, 'SSL');
		$this->data['sort_model'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.model' . $url, 'SSL');
		$this->data['sort_price'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.price' . $url, 'SSL');
		$this->data['sort_quantity'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.quantity' . $url, 'SSL');
		$this->data['sort_status'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.status' . $url, 'SSL');
		$this->data['sort_order'] = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . '&sort=p.sort_order' . $url, 'SSL');
		
		$url = '';

		if (isset($this->request->get['filter_name'])) {
			$url .= '&filter_name=' . urlencode(html_entity_decode($this->request->get['filter_name'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_model'])) {
			$url .= '&filter_model=' . urlencode(html_entity_decode($this->request->get['filter_model'], ENT_QUOTES, 'UTF-8'));
		}
		
		if (isset($this->request->get['filter_price'])) {
			$url .= '&filter_price=' . $this->request->get['filter_price'];
		}
		
		if (isset($this->request->get['filter_quantity'])) {
			$url .= '&filter_quantity=' . $this->request->get['filter_quantity'];
		}

		if (isset($this->request->get['filter_status'])) {
			$url .= '&filter_status=' . $this->request->get['filter_status'];
		}

		if (isset($this->request->get['sort'])) {
			$url .= '&sort=' . $this->request->get['sort'];
		}
												
		if (isset($this->request->get['order'])) {
			$url .= '&order=' . $this->request->get['order'];
		}
				
		$pagination = new Pagination();
		$pagination->total = $product_total;
		$pagination->page = $page;
		$pagination->limit = $this->config->get('config_admin_limit');
		$pagination->text = $this->language->get('text_pagination');
		$pagination->url = $this->url->link('catalog/product', 'token=' . $this->session->data['token'] . $url . '&page={page}', 'SSL');
			
		$this->data['pagination'] = $pagination->render();
	
		$this->data['filter_name'] = $filter_name;
		$this->data['filter_model'] = $filter_model;
		$this->data['filter_price'] = $filter_price;
		$this->data['filter_quantity'] = $filter_quantity;
		$this->data['filter_status'] = $filter_status;
		
		$this->data['sort'] = $sort;
		$this->data['order'] = $order;

		$this->template = 'catalog/product_list.tpl';
		$this->children = array(
			'common/header',
			'common/footer'
		);
				
		//$this->response->setOutput($this->render());
  	}
			]]></add>
		</operation>
		<operation info="related video">
			<search position="before"><![CDATA[		if (isset($this->request->post['image'])) {]]></search>
			<add><![CDATA[ if (isset($this->request->post['video'])) {
             $this->data['video'] = $this->request->post['video'];
          } elseif (isset($product_info)) {
             $this->data['video'] = $product_info['video'];
          } else {
             $this->data['video'] = '';
          }

          ]]></add>
		</operation>

	</file>

	<file name="admin/model/catalog/product.php">
		<operation info="add new function">
			<search position="before"><![CDATA[	public function getTotalProductsByLayoutId($layout_id) {]]>
			</search>
			<add>
				<![CDATA[
				public function getFeatureImages($data) {
				if($data=='0'){
				$sql = "SELECT * FROM " . DB_PREFIX . "feature_images fi WHERE fi.status='1'";
				}else{
				$sql="SELECT fi.feature_id,fi.name,pf.product_id,pf.product_feature_id,fi.image FROM ft_feature_images fi LEFT JOIN `ft_product_features` pf ON pf.feature_id=fi.feature_id AND pf.product_id='$data'";
				}
				 $query = $this->db->query($sql);
				return $query->rows;
				}


	public function getParentproducts($data = array()) {
		$sql = "SELECT * FROM " . DB_PREFIX . "product p LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id)";
		
		if (!empty($data['filter_category_id'])) {
			$sql .= " LEFT JOIN " . DB_PREFIX . "product_to_category p2c ON (p.product_id = p2c.product_id)";			
		}
				
		 $sql .= " WHERE p.product_type='1' AND  pd.language_id = '" . (int)$this->config->get('config_language_id') . "'"; 
		
		if (!empty($data['filter_name'])) {
			$sql .= " AND pd.name LIKE '" . $this->db->escape($data['filter_name']) . "%'";
		}

		if (!empty($data['filter_model'])) {
			$sql .= " AND p.model LIKE '" . $this->db->escape($data['filter_model']) . "%'";
		}
		
		if (!empty($data['filter_price'])) {
			$sql .= " AND p.price LIKE '" . $this->db->escape($data['filter_price']) . "%'";
		}
		
		if (isset($data['filter_quantity']) && !is_null($data['filter_quantity'])) {
			$sql .= " AND p.quantity = '" . $this->db->escape($data['filter_quantity']) . "'";
		}
		
		if (isset($data['filter_status']) && !is_null($data['filter_status'])) {
			$sql .= " AND p.status = '" . (int)$data['filter_status'] . "'";
		}
		
		$sql .= " GROUP BY p.product_id";
					
		$sort_data = array(
			'pd.name',
			'p.model',
			'p.price',
			'p.quantity',
			'p.status',
			'p.sort_order'
		);	
		
		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			$sql .= " ORDER BY " . $data['sort'];	
		} else {
			$sql .= " ORDER BY pd.name";	
		}
		
		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql .= " DESC";
		} else {
			$sql .= " ASC";
		}
	
		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}				

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}	
		
			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}	
		
		$query = $this->db->query($sql);
	
		return $query->rows;
	}
			]]>
		</add>
		</operation>
		<operation info="Changes in insert query">
			<search position="replace" offset="1"><![CDATA[	public function addProduct($data) {]]>
			</search>
			<add><![CDATA[
						public function addProduct($data) {
						//echo "<pre>";
						//print_r($data);
						//echo "</pre>";
						if(isset($data['parent_product_id'])){
						if($data['parent_product_id']!=""){
		$produtc_ids=implode("-",$data['parent_product_id']);
		$con_product_ids="-".$produtc_ids."-";}
		}else{
		$con_product_ids="";
		}
		
		$this->db->query("INSERT INTO " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', video = '" . $this->db->escape($data['video']) . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', product_type='".(int)$data['product_type']."', parent_product_id='$con_product_ids' ,status = '" . (int)$data['status'] . "', tax_class_id = '" . $this->db->escape($data['tax_class_id']) . "', sort_order = '" . (int)$data['sort_order'] . "', date_added = NOW()");
			]]></add>
		</operation>
				<operation info="Changes in insert query">
			<search position="replace" offset="2"><![CDATA[		foreach ($data['product_description'] as $language_id => $value) {]]>
			</search>
			<add><![CDATA[			
						foreach ($data['product_description'] as $language_id => $value) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_description SET product_id = '" . (int)$product_id . "', language_id = '" . (int)$language_id . "', name = '" . $this->db->escape($value['name']) . "', meta_keyword = '" . $this->db->escape($value['meta_keyword']) . "', meta_description = '" . $this->db->escape($value['meta_description']) . "', description = '" . $this->db->escape($value['description']) . "', more_info ='". $this->db->escape($value['moreinfo']) ."', tag = '" . $this->db->escape($value['tag']) . "'");

				}
				if(isset($data['feature_id'])){
				foreach($data['feature_id'] as $language_id => $feature){
				//print_r($feature);
				//echo $feature['language_id'];
				$this->db->query("INSERT INTO " . DB_PREFIX . "product_features SET product_id = '" . (int)$product_id . "', feature_id = '" . $feature . "'");
					}
					}]]></add>
		</operation>
		<operation info="changes in update query">
			<search position="replace" offset="1"><![CDATA[	public function editProduct($product_id, $data) {]]>
			</search>
			<add><![CDATA[
						public function editProduct($product_id, $data) {
						//echo "<pre>";
						//print_r($data);
						//echo "</pre>";
						
						if($data['product_type']=='2'){
						$addon=1;
						$produtc_ids=implode("-",$data['parent_product_id']);
						$con_produtcids="-".$produtc_ids."-";
						}else{
						$addon=0;
						$produtc_ids="";
						$parent_product_id="";
						$con_produtcids="";
						}
								
		$this->db->query("UPDATE " . DB_PREFIX . "product SET model = '" . $this->db->escape($data['model']) . "', sku = '" . $this->db->escape($data['sku']) . "', upc = '" . $this->db->escape($data['upc']) . "', ean = '" . $this->db->escape($data['ean']) . "', jan = '" . $this->db->escape($data['jan']) . "', isbn = '" . $this->db->escape($data['isbn']) . "', mpn = '" . $this->db->escape($data['mpn']) . "', location = '" . $this->db->escape($data['location']) . "', quantity = '" . (int)$data['quantity'] . "', minimum = '" . (int)$data['minimum'] . "', subtract = '" . (int)$data['subtract'] . "', stock_status_id = '" . (int)$data['stock_status_id'] . "', video = '" . $this->db->escape($data['video']) . "', date_available = '" . $this->db->escape($data['date_available']) . "', manufacturer_id = '" . (int)$data['manufacturer_id'] . "', shipping = '" . (int)$data['shipping'] . "', price = '" . (float)$data['price'] . "', points = '" . (int)$data['points'] . "', weight = '" . (float)$data['weight'] . "', weight_class_id = '" . (int)$data['weight_class_id'] . "', length = '" . (float)$data['length'] . "', width = '" . (float)$data['width'] . "', height = '" . (float)$data['height'] . "', length_class_id = '" . (int)$data['length_class_id'] . "', product_type='".(int)$data['product_type']."', parent_product_id='$con_produtcids', status = '" . (int)$data['status'] . "', tax_class_id = '" . $this->db->escape($data['tax_class_id']) . "', sort_order = '" . (int)$data['sort_order'] . "', date_modified = NOW() WHERE product_id = '" . (int)$product_id . "'");
		

		
	]]></add>
		</operation>
		<operation info="Change in select query">
			<search position="replace" offset="16"><![CDATA[	public function getProductDescriptions($product_id) {]]>
			</search>
			<add><![CDATA[
					public function getProductDescriptions($product_id) {
						$product_description_data = array();
						
						$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "product_description pd," . DB_PREFIX . "product p WHERE pd.product_id = '" . (int)$product_id . "' AND p.product_id = '" . (int)$product_id . "'");
						
						foreach ($query->rows as $result) {
							$product_description_data[$result['language_id']] = array(
								'name'             => $result['name'],
								'description'      => $result['description'],
								'meta_keyword'     => $result['meta_keyword'],
								'meta_description' => $result['meta_description'],
								'moreinfo'		   => $result['more_info'],
								'tag'              => $result['tag'],
								'producttype'	   => $result['product_type'],
								'productsids'	   => $result['parent_product_id']
							);
						}
						
						return $product_description_data;
					}
			]]></add>
		</operation>

		<operation>
			<search><![CDATA[		$this->db->query("DELETE FROM " . DB_PREFIX . "review WHERE product_id = '" . (int)$product_id . "'");]]>
			</search>
			<add><![CDATA[
						$this->db->query("DELETE FROM " . DB_PREFIX . "product_recommended_for WHERE product_id = '" . (int)$product_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "product_package WHERE product_id = '" . (int)$product_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "product_faqs WHERE product_id = '" . (int)$product_id . "'");
						$this->db->query("DELETE FROM " . DB_PREFIX . "product_features WHERE product_id = '" . (int)$product_id . "'");
						]]>
			</add>
		</operation>
	</file>


	<file name="admin/view/template/catalog/product_form.tpl">
		<operation info="Add a new field in front end">
			<search position="after">
				<![CDATA[
				                <td><textarea name="product_description[<?php echo $language['language_id']; ?>][meta_keyword]" cols="40" rows="5"><?php echo isset($product_description[$language['language_id']]) ? $product_description[$language['language_id']]['meta_keyword'] : ''; ?></textarea></td>]]>
			</search>
			<add><![CDATA[
				<?php 
				if(empty($product_description))
				{
					$product_description[1]['producttype']=1;
					$product_description[1]['productsids']="";
					$product_description[1]['addon']=0;
					$product_description[1]['description']="";
					$product_description[1]['tag']="";
					$product_description[1]['name']="";
					$product_description[1]['moreinfo']="";
					$par_productid="";
				}
				//print_r($product_description);?>
				<tr>
	                <td><?php echo $entry_add_on; ?></td>
	                <td>
	                	  <select name="product_type" id="product_type">
	                	    <option value="1">Select</option>
	                	    <option value="2" <?php if($product_description[1]['producttype']=='2'){?>selected="selected"<?php }?>>Add On</option>
	                	    <option value="3" <?php if($product_description[1]['producttype']=='3'){?>selected="selected"<?php }?>>Service</option>
	                	    <option value="4" <?php if($product_description[1]['producttype']=='4'){?>selected="selected"<?php }?>>Express installation service</option>
                	      </select>
	            
	                </td>
                </tr>
		              <?php if($product_description[1]['productsids']!=""||$product_description[1]['productsids']!='NULL'){
		              $product_description[1]['productsids'];
		              $product_id_trim=ltrim(rtrim($product_description[1]['productsids'], "-"),"-");
		              $par_productid=explode('-',$product_id_trim);
		              //print_r($par_productid);
		              }?>
				<tr id="add_product" >
                <td><?php echo $entry_product_addon; ?></td>
                <td>               	
                 <select name="parent_product_id[]" id="parent_product_id" style="width:350px;"  multiple="multiple">
                	<?php foreach ($products as $product) { 
                	 if($product_description[1]['name']!=$product['name']){ ?>
                	  <option value="<?php echo $product['product_id']; ?>"
                		<?php  for($p=0;$p<count($par_productid);$p++){?>
                			<?php if($par_productid[$p]==$product['product_id']){ echo "selected=\"selected\""; } }?>
                			><?php echo $product['name']; ?></option>
                		<?php  } }?>
                 </select>
                </td>
                </tr>
                <tr>
                <td><?php echo $entry_product_features; ?></td>
                <td>               	
                 <select name="feature_id[]" id="feature_id" style="width:350px;"  multiple="multiple">
                	<?php foreach ($features as $feature) { ?>
                	  <option value="<?php echo $feature['feature_id']; ?>"
                		<?php  for($f=0;$f<count($features);$f++){?>
                			<?php if(isset($feature['product_id'])>0){ echo "selected=\"selected\""; } }?>
                			><?php echo $feature['name']; ?></option>
                		<?php  } ?>
                 </select>
                </td>
                </tr>
				]]></add>
		</operation>
				<operation info="Add a moreinfo field in top of tags field">
			<search position="after">
				<![CDATA[                <td><textarea name="product_description[<?php echo $language['language_id']; ?>][description]" id="description<?php echo $language['language_id']; ?>"><?php echo isset($product_description[$language['language_id']]) ? $product_description[$language['language_id']]['description'] : ''; ?></textarea></td>]]>
			</search>
			<add><![CDATA[              </tr><tr>
                <td>More Info</td>
                <td><textarea name="product_description[<?php echo $language['language_id']; ?>][moreinfo]" id="moreinfo<?php echo $language['language_id']; ?>"><?php echo isset($product_description[$language['language_id']]) ? $product_description[$language['language_id']]['moreinfo'] : ''; ?></textarea></td>
              </tr>
				]]></add>
		</operation>
		<operation info="Add script">
			<search position="after"><![CDATA[<script type="text/javascript" src="view/javascript/ckeditor/ckeditor.js"></script>]]></search>
			<add><![CDATA[
				 <style>
				 #add_product{
				 <?php if($product_description[1]['producttype']!='2'){ ?>
					display:none;
					<?php } ?>
					line-height:0px;
					height:45px;
				 }
				 </style>
			<script type="text/javascript">
				$('#product_type').change(function () {
				var val = $(this).val();
				if (val=='2') {
					    $("#add_product").show();
					} else {
					    $("#add_product").hide();
					} 
				   
				});

			</script>
			<script type="text/javascript"><!--
			<?php foreach ($languages as $language) { ?>
			CKEDITOR.replace('moreinfo<?php echo $language['language_id']; ?>', {
				filebrowserBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserImageBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserFlashBrowseUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserImageUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>',
				filebrowserFlashUploadUrl: 'index.php?route=common/filemanager&token=<?php echo $token; ?>'
			});
			<?php } ?>
			//--></script> 
				]]></add>
		</operation>
		<operation info="video text">
			<search position="replace" offset='2'><![CDATA[              <td><?php echo $entry_keyword; ?></td>]]></search>
			<add><![CDATA[
			  <td><?php echo $entry_keyword; ?></td>
              <td><input type="text" name="keyword" value="<?php echo $keyword; ?>" /></td>
            </tr>
            <tr>
			     <td><?php echo $entry_video; ?></td>
			     <td><input type="text" name="video" value="<?php echo $video; ?>" /></td>
			</tr>
			]]></add>
		</operation>
	</file>
</modification>
